{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\Programming Projects\\\\React\\\\mealreel-2024\\\\frontend\\\\src\\\\components\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst likePost = async (post, updatePostLikes) => {\n  const response = await fetch(`http://localhost:3001/users/test@test.com/posts/${post.post_title}/like`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      currentUsername: 'test',\n      likes: post.likes + 1\n    })\n  });\n  if (response.ok) {\n    const updatedPost = await response.json();\n    updatePostLikes(post.post_title, updatedPost.likes);\n  }\n};\nconst Posts = ({\n  username\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const fetchPosts = async () => {\n    const response = await fetch(`http://localhost:3001/users/${username}/posts`);\n    const data = await response.json();\n    setPosts(data);\n    setCurrentUser(username);\n  };\n  const updatePostLikes = (postTitle, newLikes) => {\n    setPosts(prevPosts => prevPosts.map(post => post.post_title === postTitle ? {\n      ...post,\n      likes: newLikes\n    } : post));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"Fetch Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.post_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.post_image_url,\n          alt: post.post_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.meal_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [post.likes, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => likePost(post, updatePostLikes),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"5g/JxXITVGCkSTz/syV2jUzJ4ds=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","likePost","post","updatePostLikes","response","fetch","post_title","method","headers","body","JSON","stringify","currentUsername","likes","ok","updatedPost","json","Posts","username","_s","posts","setPosts","currentUser","setCurrentUser","fetchPosts","data","postTitle","newLikes","prevPosts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","src","post_image_url","alt","meal_type","_c","$RefreshReg$"],"sources":["C:/Users/Jake/Desktop/Programming Projects/React/mealreel-2024/frontend/src/components/Posts.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst likePost = async (post, updatePostLikes) => {\r\n  const response = await fetch(`http://localhost:3001/users/test@test.com/posts/${post.post_title}/like`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ \r\n      currentUsername: 'test',\r\n      likes: post.likes + 1 }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    const updatedPost = await response.json();\r\n    updatePostLikes(post.post_title, updatedPost.likes);\r\n  }\r\n};\r\n\r\nconst Posts = ({username}) => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const fetchPosts = async () => {\r\n    const response = await fetch(`http://localhost:3001/users/${username}/posts`);\r\n    const data = await response.json();\r\n    setPosts(data);\r\n    setCurrentUser(username);\r\n  }\r\n\r\n  const updatePostLikes = (postTitle, newLikes) => {\r\n    setPosts((prevPosts) =>\r\n      prevPosts.map((post) =>\r\n        post.post_title === postTitle ? { ...post, likes: newLikes } : post\r\n      )\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Posts</h2>\r\n      <button onClick={fetchPosts}>Fetch Posts</button>\r\n      <ul>\r\n        {posts.map((post, index) => (\r\n          <li key={index}>\r\n            <h3>{post.post_title}</h3>\r\n            <img src={post.post_image_url} alt={post.post_title} />\r\n            <p>{post.meal_type}</p>\r\n            <div>\r\n              <p>{post.likes} likes</p>\r\n              <button onClick={() => likePost(post, updatePostLikes)}>Like</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}